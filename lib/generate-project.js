const Metalsmith = require('metalsmith');
const shelljs = require('shelljs');
const inquirer = require('inquirer');
const chalk = require('chalk');
const path = require('path');
const ora = require('ora');
const transformIntoAbsolutePath = require('./local-path').transformIntoAbsolutePath;
const fs = require('fs');
const username = shelljs.exec('git config user.name', { silent: true }).stdout.replace(/\s/, '');
module.exports = tmpPath => {
  const metalsmith = Metalsmith(tmpPath);
  inquirer
    .prompt([
      {
        type: 'input',
        name: 'name',
        message: '请输入项目名称',
        default: 'zjh-project'
      },
      {
        type: 'input',
        name: 'destination',
        message: '请输入项目存储位置',
        default: process.cwd()
      }
    ])
    .then(answer => {
      //项目生成路径
      const destination = path.join(transformIntoAbsolutePath(answer.destination), answer.name);
      const spinner = ora('正在生成项目,请稍后...').start();
      //加入新的全局变量
      Object.assign(metalsmith.metadata(), answer);
      spinner.start();
      metalsmith
        .source('.')
        .destination(destination)
        .clean(false)
        .build(function (err) {
          spinner.stop();
          if (err) throw err;
          console.log(chalk.green(`\n恭喜 🎉,项目生成成功!地址：${destination}\n`));
          // update package.json
          const packageJson = require(path.join(destination, 'package.json'));
          console.log('package', path.join(destination, 'package.json'), packageJson);
          packageJson.name = answer.name;
          packageJson.version = '0.0.0';
          packageJson.repository = `git@github.com:${username}/${answer.name}.git`;
          packageJson.description = `A project generated by zjh-cli with ${packageJson.name}`;
          if (packageJson.bugs) {
            packageJson.bugs.url = `git@github.com:${username}/${answer.name}/issues`;
          }
          if (packageJson.homepage) {
            packageJson.homepage = `git@github.com:${username}/${answer.name}#readme`;
          }
          packageJson.author = username;
          fs.writeFileSync(path.join(destination, 'package.json'), JSON.stringify(packageJson, undefined, 2));
          shelljs.exec(`cd ${destination} && git init`);
        });
    });
};
